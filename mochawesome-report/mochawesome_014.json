{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-04T17:25:24.698Z",
    "end": "2025-09-04T17:25:26.283Z",
    "duration": 1585,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6764365e-a88b-45e0-9d51-66b9be595fe3",
      "title": "",
      "fullFile": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\compte_illimite.cy.js",
      "file": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\compte_illimite.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5a32f274-4018-4bc4-bf22-f0a81d02e7de",
          "title": "COMPTE MOOV ILLIMITE API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4a4f324d-f0a3-435d-a6a1-8263a1cb2e79",
              "title": "Successful COMPTE MOOV ILLIMITE",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should process COMPTE MOOV ILLIMITE for self and return success response",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Successful COMPTE MOOV ILLIMITE should process COMPTE MOOV ILLIMITE for self and return success response",
                  "timedOut": null,
                  "duration": 237,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "f49c31dd-5dd8-43c5-a670-fd86f98270ea",
                  "parentUUID": "4a4f324d-f0a3-435d-a6a1-8263a1cb2e79",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should process COMPTE MOOV ILLIMITE for others and return success response",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Successful COMPTE MOOV ILLIMITE should process COMPTE MOOV ILLIMITE for others and return success response",
                  "timedOut": null,
                  "duration": 242,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "7ca80263-1a51-48bd-a2e4-7ef24fa4159e",
                  "parentUUID": "4a4f324d-f0a3-435d-a6a1-8263a1cb2e79",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f49c31dd-5dd8-43c5-a670-fd86f98270ea",
                "7ca80263-1a51-48bd-a2e4-7ef24fa4159e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 479,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "393d9f6f-49c6-4ecd-b183-ff6ac936a023",
              "title": "Failed response",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 70,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "bd1df877-144c-4bd6-b963-887113101207",
                  "parentUUID": "393d9f6f-49c6-4ecd-b183-ff6ac936a023",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 70,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "f706ca40-3cdd-43f3-9d82-355dafc6faa6",
                  "parentUUID": "393d9f6f-49c6-4ecd-b183-ff6ac936a023",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (SELF)",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Failed response should return invalid PIN message (SELF)",
                  "timedOut": null,
                  "duration": 136,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "67a669dc-d2ce-4774-b4d3-24269f0c751b",
                  "parentUUID": "393d9f6f-49c6-4ecd-b183-ff6ac936a023",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (OTHERS)",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Failed response should return invalid PIN message (OTHERS)",
                  "timedOut": null,
                  "duration": 134,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "d99aad18-0955-4b8d-a902-988b414c6a38",
                  "parentUUID": "393d9f6f-49c6-4ecd-b183-ff6ac936a023",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (SELF)",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Failed response should return not authorized destination number message (SELF)",
                  "timedOut": null,
                  "duration": 139,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "f2982f45-6efe-4228-8e99-807ef81aa947",
                  "parentUUID": "393d9f6f-49c6-4ecd-b183-ff6ac936a023",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (OTHERS)",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Failed response should return not authorized destination number message (OTHERS)",
                  "timedOut": null,
                  "duration": 134,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "910fb8e1-411d-4b8c-915e-543bc2741387",
                  "parentUUID": "393d9f6f-49c6-4ecd-b183-ff6ac936a023",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (SELF)",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Failed response should return not authorized sender number message (SELF)",
                  "timedOut": null,
                  "duration": 114,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "fbde345b-55de-452c-9001-71e459ffd8f5",
                  "parentUUID": "393d9f6f-49c6-4ecd-b183-ff6ac936a023",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (OTHERS)",
                  "fullTitle": "COMPTE MOOV ILLIMITE API Tests Failed response should return not authorized sender number message (OTHERS)",
                  "timedOut": null,
                  "duration": 119,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "f333e7d1-3021-429d-8e9d-ed14c629484e",
                  "parentUUID": "393d9f6f-49c6-4ecd-b183-ff6ac936a023",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd1df877-144c-4bd6-b963-887113101207",
                "f706ca40-3cdd-43f3-9d82-355dafc6faa6",
                "67a669dc-d2ce-4774-b4d3-24269f0c751b",
                "d99aad18-0955-4b8d-a902-988b414c6a38",
                "f2982f45-6efe-4228-8e99-807ef81aa947",
                "910fb8e1-411d-4b8c-915e-543bc2741387",
                "fbde345b-55de-452c-9001-71e459ffd8f5",
                "f333e7d1-3021-429d-8e9d-ed14c629484e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 916,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}