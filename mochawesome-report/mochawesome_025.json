{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 9,
    "pending": 0,
    "failures": 1,
    "start": "2025-09-05T08:11:58.652Z",
    "end": "2025-09-05T08:12:02.601Z",
    "duration": 3949,
    "testsRegistered": 10,
    "passPercent": 90,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "beefb887-5118-4038-b259-426b6ae84591",
      "title": "",
      "fullFile": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\compte_bundle_roaming.cy.js",
      "file": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\compte_bundle_roaming.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c245da62-b692-4ded-8cf1-cee26b8b648f",
          "title": "COMPTE BUNDLE ROAMING API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c66e58e4-0fb3-4dbb-8467-f27bdda97e0b",
              "title": "Successful COMPTE BUNDLE ROAMING",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should process COMPTE BUNDLE ROAMING for self and return success response",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Successful COMPTE BUNDLE ROAMING should process COMPTE BUNDLE ROAMING for self and return success response",
                  "timedOut": null,
                  "duration": 497,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "969e558b-34d1-46ab-8bdd-1cf741814af2",
                  "parentUUID": "c66e58e4-0fb3-4dbb-8467-f27bdda97e0b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should process COMPTE BUNDLE ROAMING for others and return success response",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Successful COMPTE BUNDLE ROAMING should process COMPTE BUNDLE ROAMING for others and return success response",
                  "timedOut": null,
                  "duration": 1173,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "94a8d945-3acd-4341-b506-f3cce9fee5cf",
                  "parentUUID": "c66e58e4-0fb3-4dbb-8467-f27bdda97e0b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "969e558b-34d1-46ab-8bdd-1cf741814af2",
                "94a8d945-3acd-4341-b506-f3cce9fee5cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1670,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fe2bcf40-5386-4035-b0af-a459294adf63",
              "title": "Failed response",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 340,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "b1d2929e-e771-433b-a6e0-e95dcc4d8a94",
                  "parentUUID": "fe2bcf40-5386-4035-b0af-a459294adf63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 247,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "c30de083-c789-4f53-ba4b-6c173b8daec2",
                  "parentUUID": "fe2bcf40-5386-4035-b0af-a459294adf63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (SELF)",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Failed response should return invalid PIN message (SELF)",
                  "timedOut": null,
                  "duration": 460,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {
                    "message": "AssertionError: expected value to match json-schema 'COMPTE BUNDLE ROAMING Response Schema' -> '{\"command-id\":\"BILL\",\"trans-id...'\n      Missing required property: request-id\n          schema: COMPTE BUNDLE ROAMING Response Schema\n          rule:   /required/2 -> \"request-id\"",
                    "estack": "AssertionError: expected value to match json-schema 'COMPTE BUNDLE ROAMING Response Schema' -> '{\"command-id\":\"BILL\",\"trans-id...'\n      Missing required property: request-id\n          schema: COMPTE BUNDLE ROAMING Response Schema\n          rule:   /required/2 -> \"request-id\"\n    at Proxy.eval (webpack://cypess-api-test/./node_modules/chai-json-schema/index.js:173:0)\n    at Proxy.methodWrapper (http://localhost:55113/__cypress/runner/cypress_runner.js:80245:25)\n    at Context.eval (webpack://cypess-api-test/./cypress/e2e/API-TEST/INTERNET_BUNDLE/compte_bundle_roaming.cy.js:213:44)\n    at getRet (http://localhost:55113/__cypress/runner/cypress_runner.js:121549:20)\n    at tryCatcher (http://localhost:55113/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:55113/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:55113/__cypress/runner/cypress_runner.js:121560:66)\n    at Context.then (http://localhost:55113/__cypress/runner/cypress_runner.js:121811:21)",
                    "diff": "- { 'command-id': 'BILL',\n-   'trans-id': 'BILL250905.1612.R00083',\n-   status: 8,\n-   message: 'Le code secret que vous avez saisi est errone,veuillez reessayer svp ou  RDV avec votre piece d\\'identite dans l\\'agence Moov la plus proche pour le reinitialiser.' }\n+ 'COMPTE BUNDLE ROAMING Response Schema'\n"
                  },
                  "uuid": "396470ff-1d0d-40eb-8f6d-df3c6eabf3b8",
                  "parentUUID": "fe2bcf40-5386-4035-b0af-a459294adf63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (OTHERS)",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Failed response should return invalid PIN message (OTHERS)",
                  "timedOut": null,
                  "duration": 255,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "5785d920-f052-4847-8eab-771e74788fe8",
                  "parentUUID": "fe2bcf40-5386-4035-b0af-a459294adf63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (SELF)",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Failed response should return not authorized destination number message (SELF)",
                  "timedOut": null,
                  "duration": 153,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "f436adbd-fde3-44f0-87c3-a2d0cbd2562d",
                  "parentUUID": "fe2bcf40-5386-4035-b0af-a459294adf63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (OTHERS)",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Failed response should return not authorized destination number message (OTHERS)",
                  "timedOut": null,
                  "duration": 171,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "5de34fc4-d0b5-4887-9827-68bc49d01f29",
                  "parentUUID": "fe2bcf40-5386-4035-b0af-a459294adf63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (SELF)",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Failed response should return not authorized sender number message (SELF)",
                  "timedOut": null,
                  "duration": 244,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "ec00753e-7c32-45fa-835b-2e357aaa99ee",
                  "parentUUID": "fe2bcf40-5386-4035-b0af-a459294adf63",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (OTHERS)",
                  "fullTitle": "COMPTE BUNDLE ROAMING API Tests Failed response should return not authorized sender number message (OTHERS)",
                  "timedOut": null,
                  "duration": 175,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "a055aa00-0c36-46cd-a001-0e75d1b3b2df",
                  "parentUUID": "fe2bcf40-5386-4035-b0af-a459294adf63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1d2929e-e771-433b-a6e0-e95dcc4d8a94",
                "c30de083-c789-4f53-ba4b-6c173b8daec2",
                "5785d920-f052-4847-8eab-771e74788fe8",
                "f436adbd-fde3-44f0-87c3-a2d0cbd2562d",
                "5de34fc4-d0b5-4887-9827-68bc49d01f29",
                "ec00753e-7c32-45fa-835b-2e357aaa99ee",
                "a055aa00-0c36-46cd-a001-0e75d1b3b2df"
              ],
              "failures": [
                "396470ff-1d0d-40eb-8f6d-df3c6eabf3b8"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2045,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}