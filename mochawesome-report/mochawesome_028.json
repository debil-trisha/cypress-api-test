{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-05T08:12:21.638Z",
    "end": "2025-09-05T08:12:24.921Z",
    "duration": 3283,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0be978eb-4163-4b2d-8c06-36453f9c9a8a",
      "title": "",
      "fullFile": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\forfaits_internationaux.cy.js",
      "file": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\forfaits_internationaux.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3cc6d528-c9e6-4272-89f2-bb6aceafe553",
          "title": "FORFAITS_INTERNATIONAUX API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "534b4d24-620a-41ad-94b6-b160976e1509",
              "title": "Successful FORFAITS INTERNATIONAUX",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should process FORFAITS INTERNATIONAUX for self and return success response",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Successful FORFAITS INTERNATIONAUX should process FORFAITS INTERNATIONAUX for self and return success response",
                  "timedOut": null,
                  "duration": 232,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "923b5fed-a32f-4b8a-ad05-7cd639b641f3",
                  "parentUUID": "534b4d24-620a-41ad-94b6-b160976e1509",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should process FORFAITS INTERNATIONAUX for others and return success response",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Successful FORFAITS INTERNATIONAUX should process FORFAITS INTERNATIONAUX for others and return success response",
                  "timedOut": null,
                  "duration": 601,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "d4258faa-ab81-4e8a-a292-4231343830a9",
                  "parentUUID": "534b4d24-620a-41ad-94b6-b160976e1509",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "923b5fed-a32f-4b8a-ad05-7cd639b641f3",
                "d4258faa-ab81-4e8a-a292-4231343830a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 833,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "8821af50-6d8b-42df-8764-b6f9529e41d3",
              "title": "Failed response",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 139,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "fe989f71-757c-4cdf-99dc-3c6f48d7ede7",
                  "parentUUID": "8821af50-6d8b-42df-8764-b6f9529e41d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 403,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "8c727498-890b-4aa7-b921-1531cf4bc9e3",
                  "parentUUID": "8821af50-6d8b-42df-8764-b6f9529e41d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (SELF)",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Failed response should return invalid PIN message (SELF)",
                  "timedOut": null,
                  "duration": 123,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "e66809df-b045-4640-bb0d-d66288ae9f4a",
                  "parentUUID": "8821af50-6d8b-42df-8764-b6f9529e41d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (OTHERS)",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Failed response should return invalid PIN message (OTHERS)",
                  "timedOut": null,
                  "duration": 163,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "6f106f2f-ae18-445f-965c-bb2fe3694cff",
                  "parentUUID": "8821af50-6d8b-42df-8764-b6f9529e41d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (SELF)",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Failed response should return not authorized destination number message (SELF)",
                  "timedOut": null,
                  "duration": 434,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "a82e0a19-f1b4-4a33-a998-4877cef1e7b0",
                  "parentUUID": "8821af50-6d8b-42df-8764-b6f9529e41d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (OTHERS)",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Failed response should return not authorized destination number message (OTHERS)",
                  "timedOut": null,
                  "duration": 248,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "1df116ce-e5b3-4e7c-9086-5b8b9d172326",
                  "parentUUID": "8821af50-6d8b-42df-8764-b6f9529e41d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (SELF)",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Failed response should return not authorized sender number message (SELF)",
                  "timedOut": null,
                  "duration": 188,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "506fc23f-0728-4d18-9063-76886ac5868b",
                  "parentUUID": "8821af50-6d8b-42df-8764-b6f9529e41d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (OTHERS)",
                  "fullTitle": "FORFAITS_INTERNATIONAUX API Tests Failed response should return not authorized sender number message (OTHERS)",
                  "timedOut": null,
                  "duration": 590,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "160dbe0c-66f2-4f9b-8fc5-87fdf0b22810",
                  "parentUUID": "8821af50-6d8b-42df-8764-b6f9529e41d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe989f71-757c-4cdf-99dc-3c6f48d7ede7",
                "8c727498-890b-4aa7-b921-1531cf4bc9e3",
                "e66809df-b045-4640-bb0d-d66288ae9f4a",
                "6f106f2f-ae18-445f-965c-bb2fe3694cff",
                "a82e0a19-f1b4-4a33-a998-4877cef1e7b0",
                "1df116ce-e5b3-4e7c-9086-5b8b9d172326",
                "506fc23f-0728-4d18-9063-76886ac5868b",
                "160dbe0c-66f2-4f9b-8fc5-87fdf0b22810"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2288,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}