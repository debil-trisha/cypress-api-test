{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-05T11:12:22.434Z",
    "end": "2025-09-05T11:12:24.271Z",
    "duration": 1837,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3f3f4199-d181-4e51-806e-0fd9be2d2872",
      "title": "",
      "fullFile": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\moov_internet.cy.js",
      "file": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\moov_internet.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4538f061-cdb4-4d5a-95b2-92a478c1bd90",
          "title": "MOOV INTERNET API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c8433ace-c550-4055-a08a-2aeab8b33e1a",
              "title": "Successful MOOV INTERNET",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should process MOOV INTERNET for self and return success response",
                  "fullTitle": "MOOV INTERNET API Tests Successful MOOV INTERNET should process MOOV INTERNET for self and return success response",
                  "timedOut": null,
                  "duration": 228,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "853837b1-a152-4eca-a7a6-c4fa0f0bda04",
                  "parentUUID": "c8433ace-c550-4055-a08a-2aeab8b33e1a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should process MOOV INTERNET for others and return success response",
                  "fullTitle": "MOOV INTERNET API Tests Successful MOOV INTERNET should process MOOV INTERNET for others and return success response",
                  "timedOut": null,
                  "duration": 212,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "ffaa7c4b-4060-4d47-8bf8-1dcebfb11065",
                  "parentUUID": "c8433ace-c550-4055-a08a-2aeab8b33e1a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "853837b1-a152-4eca-a7a6-c4fa0f0bda04",
                "ffaa7c4b-4060-4d47-8bf8-1dcebfb11065"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 440,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4263143f-986b-4209-82e8-c10ec5733079",
              "title": "Failed response",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 69,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "f55f638b-5d76-490d-9285-77108fe9a806",
                  "parentUUID": "4263143f-986b-4209-82e8-c10ec5733079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 65,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "9e21520f-a690-4fab-ae0a-941ca8a94fd9",
                  "parentUUID": "4263143f-986b-4209-82e8-c10ec5733079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (SELF)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return invalid PIN message (SELF)",
                  "timedOut": null,
                  "duration": 420,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "8b59e362-82d3-446e-921c-1dd4f8b2e9b0",
                  "parentUUID": "4263143f-986b-4209-82e8-c10ec5733079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (OTHERS)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return invalid PIN message (OTHERS)",
                  "timedOut": null,
                  "duration": 130,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "1581b1a2-b1dc-4973-8008-15f330df0ff5",
                  "parentUUID": "4263143f-986b-4209-82e8-c10ec5733079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (SELF)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return not authorized destination number message (SELF)",
                  "timedOut": null,
                  "duration": 133,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "968c74ba-c213-4a01-9a98-c8c6e4fa1d88",
                  "parentUUID": "4263143f-986b-4209-82e8-c10ec5733079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (OTHERS)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return not authorized destination number message (OTHERS)",
                  "timedOut": null,
                  "duration": 135,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "f9b163f3-ac41-48f5-b0d9-b234b7cf1a46",
                  "parentUUID": "4263143f-986b-4209-82e8-c10ec5733079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (SELF)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return not authorized sender number message (SELF)",
                  "timedOut": null,
                  "duration": 118,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "a7136b8c-be39-4026-ac33-1c5b38529b3e",
                  "parentUUID": "4263143f-986b-4209-82e8-c10ec5733079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (OTHERS)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return not authorized sender number message (OTHERS)",
                  "timedOut": null,
                  "duration": 100,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "6c364515-deb3-4182-bb44-baf52848aa4b",
                  "parentUUID": "4263143f-986b-4209-82e8-c10ec5733079",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f55f638b-5d76-490d-9285-77108fe9a806",
                "9e21520f-a690-4fab-ae0a-941ca8a94fd9",
                "8b59e362-82d3-446e-921c-1dd4f8b2e9b0",
                "1581b1a2-b1dc-4973-8008-15f330df0ff5",
                "968c74ba-c213-4a01-9a98-c8c6e4fa1d88",
                "f9b163f3-ac41-48f5-b0d9-b234b7cf1a46",
                "a7136b8c-be39-4026-ac33-1c5b38529b3e",
                "6c364515-deb3-4182-bb44-baf52848aa4b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1170,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}