{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-05T08:12:31.564Z",
    "end": "2025-09-05T08:12:38.974Z",
    "duration": 7410,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "862c87e2-ebda-415b-9064-4ebbd9e4d63c",
      "title": "",
      "fullFile": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\moov_internet.cy.js",
      "file": "cypress\\e2e\\API-TEST\\INTERNET_BUNDLE\\moov_internet.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2a6312e9-b00a-4134-8ffc-cdf4d19ca9e1",
          "title": "MOOV INTERNET API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4b716bc6-4181-432e-a204-d0dc18257014",
              "title": "Successful MOOV INTERNET",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should process MOOV INTERNET for self and return success response",
                  "fullTitle": "MOOV INTERNET API Tests Successful MOOV INTERNET should process MOOV INTERNET for self and return success response",
                  "timedOut": null,
                  "duration": 344,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "27aa02b0-27a9-4d9b-a3ce-1b5a6886dca8",
                  "parentUUID": "4b716bc6-4181-432e-a204-d0dc18257014",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should process MOOV INTERNET for others and return success response",
                  "fullTitle": "MOOV INTERNET API Tests Successful MOOV INTERNET should process MOOV INTERNET for others and return success response",
                  "timedOut": null,
                  "duration": 5183,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Débit de');\n});",
                  "err": {},
                  "uuid": "cb01cdf8-64bc-4ff9-b1cb-1c53b606982a",
                  "parentUUID": "4b716bc6-4181-432e-a204-d0dc18257014",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27aa02b0-27a9-4d9b-a3ce-1b5a6886dca8",
                "cb01cdf8-64bc-4ff9-b1cb-1c53b606982a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5527,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4667c891-e01d-4c89-97fc-4c8cbde0638b",
              "title": "Failed response",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 149,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforSelf,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "26bfe34f-fc8e-4492-85f6-0127e1a2dae2",
                  "parentUUID": "4667c891-e01d-4c89-97fc-4c8cbde0638b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 185,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBodyforOthers,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "e9a12f27-9776-4a59-8d5d-4177e4be896e",
                  "parentUUID": "4667c891-e01d-4c89-97fc-4c8cbde0638b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (SELF)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return invalid PIN message (SELF)",
                  "timedOut": null,
                  "duration": 322,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "a578584e-c32b-4bad-ac63-90a498ba822f",
                  "parentUUID": "4667c891-e01d-4c89-97fc-4c8cbde0638b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message (OTHERS)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return invalid PIN message (OTHERS)",
                  "timedOut": null,
                  "duration": 162,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "bd8eecc0-23c7-4270-9b8e-0e2d75d919e8",
                  "parentUUID": "4667c891-e01d-4c89-97fc-4c8cbde0638b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (SELF)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return not authorized destination number message (SELF)",
                  "timedOut": null,
                  "duration": 184,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "d0aae1c4-9e33-4f28-9b52-281b464d8d49",
                  "parentUUID": "4667c891-e01d-4c89-97fc-4c8cbde0638b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized destination number message (OTHERS)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return not authorized destination number message (OTHERS)",
                  "timedOut": null,
                  "duration": 291,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedNumberBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(51);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "8b849858-4d98-45e9-ac58-e4d54e3bdf46",
                  "parentUUID": "4667c891-e01d-4c89-97fc-4c8cbde0638b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (SELF)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return not authorized sender number message (SELF)",
                  "timedOut": null,
                  "duration": 184,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodySELF,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "3c70ba41-25ff-4429-b29e-13bde955e230",
                  "parentUUID": "4667c891-e01d-4c89-97fc-4c8cbde0638b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return not authorized sender number message (OTHERS)",
                  "fullTitle": "MOOV INTERNET API Tests Failed response should return not authorized sender number message (OTHERS)",
                  "timedOut": null,
                  "duration": 196,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: notAuthorizedSenderNumBodyOTHERS,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  expect(response.body['command-id']).to.equal('BILL');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^BILL\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  notAuthorizedSenderNumMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "50153f34-4d84-469d-b69e-35c62c09ec9d",
                  "parentUUID": "4667c891-e01d-4c89-97fc-4c8cbde0638b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26bfe34f-fc8e-4492-85f6-0127e1a2dae2",
                "e9a12f27-9776-4a59-8d5d-4177e4be896e",
                "a578584e-c32b-4bad-ac63-90a498ba822f",
                "bd8eecc0-23c7-4270-9b8e-0e2d75d919e8",
                "d0aae1c4-9e33-4f28-9b52-281b464d8d49",
                "8b849858-4d98-45e9-ac58-e4d54e3bdf46",
                "3c70ba41-25ff-4429-b29e-13bde955e230",
                "50153f34-4d84-469d-b69e-35c62c09ec9d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1673,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}