{
  "stats": {
    "suites": 3,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-04T17:25:46.538Z",
    "end": "2025-09-04T17:25:47.282Z",
    "duration": 744,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6eac357d-4060-4f6b-8e20-e82c117c359f",
      "title": "",
      "fullFile": "cypress\\e2e\\API-TEST\\INTERNAL_TRANSACTION\\cash_off-net.cy.js",
      "file": "cypress\\e2e\\API-TEST\\INTERNAL_TRANSACTION\\cash_off-net.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "68b02307-966b-4f5f-95f8-13b631d404a7",
          "title": "OFF NET Cash Transfer API Tests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "39f1a207-5d9b-48b7-87ae-44e13a422506",
              "title": "Successful OFF NET Cash Transfer",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should process off net cash transfer and return success response",
                  "fullTitle": "OFF NET Cash Transfer API Tests Successful OFF NET Cash Transfer should process off net cash transfer and return success response",
                  "timedOut": null,
                  "duration": 204,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: requestBody,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n}).then(response => {\n  // Validate response status\n  expect(response.status).to.equal(200);\n  // Validate response structure\n  const responseSchema = {\n    title: 'Cash Transfer Response Schema',\n    type: 'object',\n    required: ['command-id', 'trans-id', 'request-id', 'status', 'message'],\n    properties: {\n      'command-id': {\n        type: 'string'\n      },\n      'trans-id': {\n        type: 'string'\n      },\n      'request-id': {\n        type: 'string'\n      },\n      'status': {\n        type: 'integer'\n      },\n      'message': {\n        type: 'string'\n      }\n    }\n  };\n  expect(response.body).to.be.jsonSchema(responseSchema);\n  // Validate response values\n  expect(response.body['command-id']).to.equal('CASH');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(0);\n  expect(response.body['trans-id']).to.match(/^CASH\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  expect(response.body.message).to.contains('Vous avez envoye');\n});",
                  "err": {},
                  "uuid": "d61da9b4-2ed6-4fc6-a23a-db1d83437b57",
                  "parentUUID": "39f1a207-5d9b-48b7-87ae-44e13a422506",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d61da9b4-2ed6-4fc6-a23a-db1d83437b57"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 204,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "1e46b531-65da-4cd3-8081-255175606f25",
              "title": "Failed response",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 for invalid endpoint",
                  "fullTitle": "OFF NET Cash Transfer API Tests Failed response should return 404 for invalid endpoint",
                  "timedOut": null,
                  "duration": 73,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'POST',\n  url: invalidEndpoint,\n  body: requestBody,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // Verify Not Found response\n  expect(response.status).to.equal(404);\n});",
                  "err": {},
                  "uuid": "025af4e9-a817-4d03-b4ad-a1998ca2d494",
                  "parentUUID": "1e46b531-65da-4cd3-8081-255175606f25",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid PIN message",
                  "fullTitle": "OFF NET Cash Transfer API Tests Failed response should return invalid PIN message",
                  "timedOut": null,
                  "duration": 166,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const invalidPINBody = {\n  \"request-id\": randomId,\n  \"command-id\": \"CASH\",\n  \"sender\": \"2250102919300\",\n  \"destination\": \"2250565473789\",\n  \"auth\": \"1234\",\n  //invalid PIN\n  \"amount\": \"500\",\n  \"remarks\": \"Cash Transfer\",\n  \"extended-data\": {\n    \"channel\": \"mobileapp-ios\",\n    \"lang\": \"F\",\n    \"cellid\": \"0\",\n    \"ext2\": \"\",\n    \"ext1\": \"\"\n  }\n};\ncy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidPINBody,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body['command-id']).to.equal('CASH');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(8);\n  expect(response.body['trans-id']).to.match(/^CASH\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  // Validate message content\n  const invalidPINmessage = [\"Le code secret que vous avez saisi est errone,veuillez reessayer svp ou  RDV avec votre piece d'identite dans l'agence Moov la plus proche pour le reinitialiser.\"];\n  invalidPINmessage.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "84ac2ea7-8dd5-4384-b815-91d16ba477f7",
                  "parentUUID": "1e46b531-65da-4cd3-8081-255175606f25",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid destination number message",
                  "fullTitle": "OFF NET Cash Transfer API Tests Failed response should return invalid destination number message",
                  "timedOut": null,
                  "duration": 102,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const invalidDestinationNumberBody = {\n  \"request-id\": randomId,\n  \"command-id\": \"CASH\",\n  \"sender\": \"2250102919300\",\n  \"destination\": \"invalid_destination\",\n  //invalid destination number\n  \"auth\": \"2222\",\n  \"amount\": \"500\",\n  \"remarks\": \"Cash Transfer\",\n  \"extended-data\": {\n    \"channel\": \"mobileapp-ios\",\n    \"lang\": \"F\",\n    \"cellid\": \"0\",\n    \"ext2\": \"\",\n    \"ext1\": \"\"\n  }\n};\ncy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidDestinationNumberBody,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body['command-id']).to.equal('CASH');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(3);\n  expect(response.body['trans-id']).to.match(/^CASH\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  // Validate message content\n  const invalidDestinationNumberMESSAGE = [\"Le numero que vous avez entre n'est pas valide. Merci de verifier et reessayer svp . \"];\n  invalidDestinationNumberMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "e5009727-119e-4473-a702-297d937ca3dc",
                  "parentUUID": "1e46b531-65da-4cd3-8081-255175606f25",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return invalid sender number message",
                  "fullTitle": "OFF NET Cash Transfer API Tests Failed response should return invalid sender number message",
                  "timedOut": null,
                  "duration": 96,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const invalidsenderNumberBody = {\n  \"request-id\": randomId,\n  \"command-id\": \"CASH\",\n  \"sender\": \"invalid_sender\",\n  //invalid sender number\n  \"destination\": \"2250565473789\",\n  \"auth\": \"2222\",\n  \"amount\": \"500\",\n  \"remarks\": \"Cash Transfer\",\n  \"extended-data\": {\n    \"channel\": \"mobileapp-ios\",\n    \"lang\": \"F\",\n    \"cellid\": \"0\",\n    \"ext2\": \"\",\n    \"ext1\": \"\"\n  }\n};\ncy.request({\n  method: 'POST',\n  url: validEndpoint,\n  body: invalidsenderNumberBody,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body['command-id']).to.equal('CASH');\n  expect(response.body['request-id']).to.equal(randomId);\n  expect(response.body.status).to.equal(4);\n  expect(response.body['trans-id']).to.match(/^CASH\\d{6}\\.\\d{4}\\.R\\d{5}$/);\n  // Validate message content\n  const invalidSenderNumberMESSAGE = [\"Desole, vous n'etes pas autorise a effectuer cette transaction.\"];\n  invalidSenderNumberMESSAGE.forEach(part => {\n    expect(response.body.message).to.include(part);\n  });\n});",
                  "err": {},
                  "uuid": "7c29ccf8-fb33-4746-a831-3c981cc73465",
                  "parentUUID": "1e46b531-65da-4cd3-8081-255175606f25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "025af4e9-a817-4d03-b4ad-a1998ca2d494",
                "84ac2ea7-8dd5-4384-b815-91d16ba477f7",
                "e5009727-119e-4473-a702-297d937ca3dc",
                "7c29ccf8-fb33-4746-a831-3c981cc73465"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 437,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}